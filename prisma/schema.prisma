// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  preferences Preference[]
  bookmarks Bookmark[]
  facts Fact[]
  logs GeneratedFactLog[]
}

model Preference {
  id String @id @default(cuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  facts Fact[]

  userId String
  user User @relation(fields: [userId], references: [id])
}

model Bookmark {
  id String @id @default(cuid())
  generatedAt DateTime @default(now())

  // relation
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Fact {
  id String @id @default(cuid())
  content String
  references Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  logs GeneratedFactLog[]

  userId String
  user User @relation(fields: [userId], references: [id])

  preferenceId String
  preference Preference @relation(fields: [preferenceId], references: [id])
}

model GeneratedFactLog {
  id String @id @default(cuid())
  generatedAt DateTime @default(now())

  // relation
  userId String
  user User @relation(fields: [userId], references: [id])

  factId String
  fact Fact @relation(fields: [factId], references: [id])
}