generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String             @id @default(cuid())
  name                   String
  email                  String             @unique
  password               String?
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  hasCompletedOnboarding Boolean            @default(false)
  bookmarks              Bookmark[]
  facts                  Fact[]
  logs                   GeneratedFactLog[]
  sessions               Session[]
  preferences            UserPreference[]
}

model Session {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Preference {
  id        String           @id @default(cuid())
  name      String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  // facts     Fact[]
  users     UserPreference[]
}

model UserPreference {
  id           String     @id @default(cuid())
  userId       String
  preferenceId String
  preference   Preference @relation(fields: [preferenceId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([userId, preferenceId])
}

model Bookmark {
  id          String   @id @default(cuid())
  generatedAt DateTime @default(now())
  userId      String
  factId      String
  fact        Fact     @relation(fields: [factId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model Fact {
  id           String             @id @default(cuid())
  content      String
  references   String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  userId       String?
  preferenceId String
  title        String
  bookmark     Bookmark[]
  // preference   Preference         @relation(fields: [preferenceId], references: [id])
  user         User?   @relation(fields: [userId], references: [id])
  // logs         GeneratedFactLog[]
}

model GeneratedFactLog {
  id          String   @id @default(cuid())
  generatedAt DateTime @default(now())
  userId      String
  factId      String
  // fact        Fact     @relation(fields: [factId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}
